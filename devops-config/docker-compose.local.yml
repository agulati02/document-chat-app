version: '3.8'

services:
  postgres:
    image: postgres:16-alpine
    container_name: ai-doc-postgres
    environment:
      POSTGRES_DB: ai_document_db
      POSTGRES_USER: app_user
      POSTGRES_PASSWORD: dev_password_123
    ports:
      - "5432:5432"
    volumes:
      - ./init/01_init.sql:/docker-entrypoint-initdb.d/01-init.sql
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U app_user -d ai_document_db"]
      interval: 10s
      timeout: 5s
      retries: 5
  
  # localstack:
  #   image: localstack/localstack:3.0
  #   container_name: ai-doc-localstack
  #   environment:
  #     - SERVICES=s3
  #     - DEBUG=1
  #     - DATA_DIR=/tmp/localstack/data
  #     - AWS_DEFAULT_REGION=us-east-1
  #     - AWS_ACCESS_KEY_ID=test
  #     - AWS_SECRET_ACCESS_KEY=test
  #   ports:
  #     - "4566:4566"
  #   healthcheck:
  #     test: ["CMD", "curl", "-f", "http://localhost:4566/health"]
  #     interval: 10s
  #     timeout: 5s
  #     retries: 5
  
  backend:
    build:
      context: ..
      dockerfile: devops-config/Dockerfile
    environment:
      - ENV=local
      - PYTHONPATH=/app
    ports:
      - "8000:8000"
    container_name: ai-doc-backend
    depends_on:
      postgres:
        condition: service_healthy
      # localstack:
      #   condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
    driver: local